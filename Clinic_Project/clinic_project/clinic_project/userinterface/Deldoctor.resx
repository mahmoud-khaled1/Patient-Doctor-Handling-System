<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAA8AEEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        +KbHIJU3LnaemR1odfM6/d7j1pc0AKzBetFMkQSj5hWF8R/ix4W+Dnh8at4u8SeH/CulNIIReaxqMVjb
        lyCQgeVlXcQDgZycGqjFydluTOpGEeabsl1ZvSSCJdzdPpTgciuM8FftB+APiVcaevh3x14P8QPqxlWw
        XTdatrs3ZiGZfLEbneUAJbGdo64rss0SjKLtJWJp1oVFzU2mvJ3F3DdjvRTCgMm7HNOzUmgtFR7X/v8A
        /jtFADnIjXJoUBhmnMu4c0AYFADZCI03foB1r8tvj9/wTt+In/BWL4veOviE/jrT/D+jeG/E+oeEfDOl
        X1jLNbfYrCVbeS5ikVsATTpMzEK2WXG7AVY/1JKAuG7jp7V8/wBrfN+xd8Vdeg+wa9qnwt8XXL66W06K
        51e48G6nO7tcq9tGJJk0+6cPMjRoY4Jhdb9kcibPUyzFVKEpTofHbTRPTqlfq/8ANLU+Z4kyvD4+FOjj
        ruhd8yTa1t7rdvsrW/RNpvRNr5d+B3/BNrUv+CVnxd+EvjjQfFV34svvFHiEeDPGi/YY7az+wagAIGjD
        FnjEV3DB8xctK7xgBQSjfpHtrwSK/k/bC+L2hSPY+IdH+Gfg2ZNbsxfrcaPc+MdVhkieCQWsgjnbT7Nt
        smZVCT3D27KDHCGl98qcxxNWtKMq7vO2v36J26r8NF0stOHstw+ChOlgVy0brlV29UkpNX1s7LW+rvJa
        NNskbYVGCzN2FO20ioFYnu3U06vNPohNtFLRQAjuEXJpIyzL8y7T6ZziggEj26ULy1AHzD8W/ix4s+Lt
        14+uNJ8Tar4P+HfgPU18NMfDtvA3iLxbqhESSQw3NyrQ2Vus9xFbbwhkaRJm82BEVn+R9f8AgVpfwZ8c
        eLNanfxj4D+Jlt4Y8W/2rrtn4ovbydNZtLex1jTzHdvP5l7Ztp08sbLcqPMaxYuvmqZa+kPgzeWvxS/4
        J62s2l654Tj8R+LvEE3j+C11HV0s47oz+IW1mO3lkUO0Qkh2Q7/LfYCDtbbtPmv/AAV90Bh8KviZ8RNJ
        8QeFZra3tNJtLKxstQFzd3Hm2+r6PqE8ke0BS1traKArPxZhyVPA+owL5Kv1eOmrj67JX7ptt6327I/M
        86iquF+vz960VPXWyalKXKm/dcYqMVZrd3u2eeab8E/DvxN8I2fxV8UeIPEeteIfhz8I/Dnjm+1/VfE9
        5BezahqE0t7LaQ3AnjWzX7LaPBGsTRiM6iJATKfMr7Lg1vxh+yh4x8G/bfGl18SvhT4y1O30GO71dYm1
        rw5dXQC2Mou4VVL20lm2wHzU85WnifzZV3AeM/8ABGbUdC8R/sP3Go+NrzwvMvjKdNPFhqE8LJJpunWN
        tpEUMkUhwyk2UzkMMEyt1Br2j/goD8Q9Bm/Y98Yahpmv6JNfeEEtPFlrDBfwmR30m7g1NVQBup+yYAH0
        rHG1JSxP1aWqT5fJXstO1nd6fkdWTUKVPLv7SpPllKKno9Xa7XMr+9zR5U73fVNOzPoYzAShe5p1MSVZ
        kV0ZWRxuVlOQwPQg0ua+dP0IdRUXkL7/APfR/wAaKAFkfYmetBAlj2suVYYKt3HoaXdRuoA8wk/Yq+DK
        rtX4R/C/ceg/4RWx/wDjXSpI/wBiv4NxMGHwl+GIYc7h4WsR/wC0q9L3Ubq2+s1v5n97OH+zcH/z6j/4
        Cv8AI8yn/Yw+DbyqW+EfwykZjyT4WsSf/RVH/DFHwZ/6JH8L/wDwlbD/AONV6buo3UfWa38z+9j/ALNw
        n/PqP/gK/wAiKCFLSGO3t0jhhhUIqIu1Y1AwFAHAxxx0AqbNJuo3VidouaKTdRQB/9k=
</value>
  </data>
</root>